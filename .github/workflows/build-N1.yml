name: Build fine3399 ImmortalWrt with iStoreOS

on:
  workflow_dispatch:
    inputs:
      openwrt_kernel:
        description: "选择内核版本（未匹配时自动适配）"
        required: true
        default: "6.6.y"
        type: choice
        options:
          - 5.10.y
          - 5.15.y
          - 6.1.y
          - 6.6.y
          - 6.12.y
      rootfs_partsize:
        description: "设置软件包分区大小（MB）"
        required: true
        default: "1024"
      enable_store:
        description: "集成应用商店"
        required: false
        type: boolean
        default: true
      include_docker:
        description: "是否编译Docker插件"
        required: true
        default: "yes"
        type: choice
        options:
          - "yes"
          - "no"
      enable_pppoe:
        description: "是否配置PPPoE拨号信息"
        required: true
        default: "no"
        type: choice
        options:
          - "yes"
          - "no"
      pppoe_account:
        description: "PPPoE宽带账号（启用时必填）"
        required: false
      pppoe_password:
        description: "PPPoE宽带密码（启用时必填）"
        required: false

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 拉取代码
        uses: actions/checkout@v3

      - name: 设置脚本权限
        run: chmod +x ${{ github.workspace }}/rockchip/build24.sh

      - name: 验证PPPoE输入
        run: |
          if [[ "${{ inputs.enable_pppoe }}" == "yes" ]]; then
            if [[ -z "${{ inputs.pppoe_account }}" || -z "${{ inputs.pppoe_password }}" ]]; then
              echo "错误：启用PPPoE时必须提供账号和密码！"
              exit 1
            fi
          fi

      - name: 集成应用商店
        run: |
          if [ "${{ github.event.inputs.enable_store }}" == "true" ]; then
            echo 'CUSTOM_PACKAGES="$CUSTOM_PACKAGES luci-app-store"' >> shell/custom-packages.sh
            echo "✅ 已添加应用商店"
          else
            echo "❎ 未启用应用商店"
          fi

      - name: 构建fine3399基础固件
        run: |
          profiles="fine3399"
          include_docker="${{ github.event.inputs.include_docker }}"
          rootfs_partsize="${{ github.event.inputs.rootfs_partsize }}"
          
          docker run --rm -i \
            --user root \
            -v "${{ github.workspace }}/bin:/home/build/immortalwrt/bin" \
            -v "${{ github.workspace }}/files/etc/uci-defaults:/home/build/immortalwrt/files/etc/uci-defaults" \
            -v "${{ github.workspace }}/arch/arch.conf:/home/build/immortalwrt/files/etc/opkg/arch.conf" \
            -v "${{ github.workspace }}/rockchip/imm.config:/home/build/immortalwrt/.config" \
            -v "${{ github.workspace }}/shell:/home/build/immortalwrt/shell" \
            -v "${{ github.workspace }}/rockchip/build24.sh:/home/build/immortalwrt/build.sh" \
            -e PROFILE=$profiles \
            -e INCLUDE_DOCKER=$include_docker \
            -e ROOTFS_PARTSIZE=$rootfs_partsize \
            -e ENABLE_PPPOE=${{ inputs.enable_pppoe }} \
            -e PPPOE_ACCOUNT=${{ inputs.pppoe_account }} \
            -e PPPOE_PASSWORD=${{ inputs.pppoe_password }} \
            immortalwrt/imagebuilder:rockchip-armv8-openwrt-24.10.2 /bin/bash /home/build/immortalwrt/build.sh

      - name: 查找生成的rootfs文件
        id: find_rootfs
        run: |
          ROOTFS_FILE=$(find bin/targets/rockchip/armv8/ -type f -name "*rootfs.tar.gz" | head -n1)
          echo "找到rootfs文件：$ROOTFS_FILE"
          if [ ! -f "$ROOTFS_FILE" ]; then
            echo "错误：未找到rootfs文件！"
            exit 1
          fi
          echo "file=$ROOTFS_FILE" >> $GITHUB_OUTPUT

      - name: 打包iStoreOS固件
        uses: ophub/amlogic-s9xxx-openwrt@main
        with:
          openwrt_path: ${{ steps.find_rootfs.outputs.file }}
          openwrt_board: "fine3399"
          openwrt_kernel: ${{ inputs.openwrt_kernel }}
          auto_kernel: true
          kernel_repo: ophub/kernel
          kernel_usage: stable
          builder_name: "custom-builder"

      - name: 重命名固件文件
        run: |
          for FILE in ${{ env.PACKAGED_OUTPUTPATH }}/*.img.gz; do
            NEW_FILENAME=$(basename "$FILE" | sed "s/openwrt/immortalwrt-fine3399-24.10.2/g")
            mv "$FILE" "${{ env.PACKAGED_OUTPUTPATH }}/$NEW_FILENAME"
          done

      - name: 上传固件到Release
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: fine3399-autobuild
          name: fine3399 ImmortalWrt 固件
          files: ${{ env.PACKAGED_OUTPUTPATH }}/*.img.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
