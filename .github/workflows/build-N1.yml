name: Build OpenAppFilter for RK3399 iStoreOS

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 检查系统环境
        run: |
          echo "系统信息: $(uname -a)"
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib \
            gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev \
            file wget curl

      - name: 获取当前时间
        id: get_time
        run: echo "current_date=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT

      - name: 克隆iStoreOS源码
        run: |
          git clone https://github.com/istoreos/istoreos.git --depth=1
          cd istoreos
          echo "ISTOREOS_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: 配置目标平台(RK3399)和内核(6.1.151)
        run: |
          cd istoreos
          # 设置RK3399目标平台
          echo "CONFIG_TARGET_rockchip=y" > .config
          echo "CONFIG_TARGET_rockchip_armv8=y" >> .config
          echo "CONFIG_TARGET_rockchip_armv8_DEVICE_friendlyarm_nanopi-r4s=y" >> .config
          
          # 锁定内核版本为6.1.151
          echo "CONFIG_KERNEL_VERSION=6.1.151" >> .config
          echo "CONFIG_KERNEL_PATCHVER=6.1" >> .config
          
          # 启用必要的内核模块
          echo "CONFIG_NETFILTER=y" >> .config
          echo "CONFIG_NETFILTER_NETLINK=y" >> .config
          echo "CONFIG_IP6_NF_IPTABLES=y" >> .config
          echo "CONFIG_IP_NF_IPTABLES=y" >> .config
          echo "CONFIG_KERNEL_NET_CLS_CGROUP=y" >> .config
          echo "CONFIG_KERNEL_CGROUPS=y" >> .config
          
          make defconfig

      - name: 集成OpenAppFilter源码
        run: |
          cd istoreos/package
          # 克隆OpenAppFilter并检查目录结构
          git clone https://github.com/destan19/OpenAppFilter.git
          
          # 检查目录结构
          echo "OpenAppFilter目录内容:"
          ls -la OpenAppFilter/
          
          # 查找Makefile文件
          if [ -f "OpenAppFilter/Makefile" ]; then
            echo "✅ 找到主Makefile文件"
          elif [ -f "OpenAppFilter/open-app-filter/Makefile" ]; then
            echo "✅ 在open-app-filter子目录找到Makefile"
          else
            echo "❌ 未找到Makefile文件，目录内容:"
            find OpenAppFilter/ -type f -name "Makefile" -o -name "makefile" | head -10
            exit 1
          fi

      - name: 配置OpenAppFilter编译选项
        run: |
          cd istoreos
          # 配置为模块编译，确保生成IPK
          echo "CONFIG_PACKAGE_luci-app-oaf=m" >> .config
          echo "CONFIG_PACKAGE_open-app-filter=m" >> .config
          echo "CONFIG_PACKAGE_oaf=m" >> .config
          echo "CONFIG_PACKAGE_kmod-oaf=m" >> .config
          
          # 保存配置
          make defconfig
          
          # 验证配置
          echo "已配置的OpenAppFilter选项:"
          grep "CONFIG_PACKAGE_.*oaf" .config || true

      - name: 更新 feeds 并安装依赖
        run: |
          cd istoreos
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 编译OpenAppFilter插件
        run: |
          cd istoreos
          # 首先编译工具链和依赖
          make tools/compile -j$(nproc)
          make toolchain/compile -j$(nproc)
          
          # 单独编译OpenAppFilter
          make package/OpenAppFilter/compile V=s -j$(nproc)
          
          # 创建IPK收集目录
          mkdir -p ${{ github.workspace }}/oaf-ipk
          
          # 查找并复制生成的IPK文件
          find bin/ -name "*oaf*.ipk" -exec cp {} ${{ github.workspace }}/oaf-ipk/ \;
          find bin/ -name "*open-app-filter*.ipk" -exec cp {} ${{ github.workspace }}/oaf-ipk/ \;
          find bin/ -name "*luci-app-oaf*.ipk" -exec cp {} ${{ github.workspace }}/oaf-ipk/ \;
          
          # 检查是否生成了IPK
          IPK_COUNT=$(ls -1 ${{ github.workspace }}/oaf-ipk/*.ipk 2>/dev/null | wc -l)
          if [ $IPK_COUNT -eq 0 ]; then
            echo "❌ 未生成任何IPK文件，编译失败"
            echo "尝试查找所有ipk文件:"
            find bin/ -name "*.ipk" | head -10
            exit 1
          else
            echo "✅ 成功生成 $IPK_COUNT 个IPK文件"
          fi
          
          # 显示生成的文件
          echo "生成的IPK文件列表:"
          ls -la ${{ github.workspace }}/oaf-ipk/

      - name: 生成插件信息
        run: |
          echo "OpenAppFilter for RK3399 iStoreOS" > ${{ github.workspace }}/oaf-ipk/INFO.txt
          echo "内核版本: 6.1.151" >> ${{ github.workspace }}/oaf-ipk/INFO.txt
          echo "构建时间: ${{ steps.get_time.outputs.current_date }}" >> ${{ github.workspace }}/oaf-ipk/INFO.txt
          echo "iStoreOS Commit: ${{ env.ISTOREOS_COMMIT }}" >> ${{ github.workspace }}/oaf-ipk/INFO.txt
          echo "" >> ${{ github.workspace }}/oaf-ipk/INFO.txt
          echo "安装方法:" >> ${{ github.workspace }}/oaf-ipk/INFO.txt
          echo "1. 将IPK文件上传到设备" >> ${{ github.workspace }}/oaf-ipk/INFO.txt
          echo "2. 执行: opkg install *.ipk" >> ${{ github.workspace }}/oaf-ipk/INFO.txt
          echo "" >> ${{ github.workspace }}/oaf-ipk/INFO.txt
          echo "包含的包:" >> ${{ github.workspace }}/oaf-ipk/INFO.txt
          ls -1 ${{ github.workspace }}/oaf-ipk/*.ipk | sed 's|.*/||' >> ${{ github.workspace }}/oaf-ipk/INFO.txt

      - name: 上传插件到Releases
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: oaf-istoreos-rk3399-${{ steps.get_time.outputs.current_date }}
          name: OpenAppFilter for RK3399 iStoreOS (6.1.151)
          body: |
            ## OpenAppFilter插件 (RK3399专用)
            - 适用系统: iStoreOS
            - 内核版本: 6.1.151
            - 目标平台: RK3399
            - 构建时间: ${{ steps.get_time.outputs.current_date }}
            - iStoreOS Commit: ${{ env.ISTOREOS_COMMIT }}
            
            ### 安装方法
            1. 下载所有IPK文件
            2. 上传到设备任意目录
            3. 执行 `opkg install *.ipk` 安装
            
            ### 包含的包
            $(ls -1 ${{ github.workspace }}/oaf-ipk/*.ipk | sed 's|.*/||' | sed 's/^/- /')
          files: ${{ github.workspace }}/oaf-ipk/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 构建结果报告
        if: always()
        run: |
          echo "## 构建结果"
          echo "- 状态: ${{ job.status }}"
          echo "- 时间: ${{ steps.get_time.outputs.current_date }}"
          echo "- 目标平台: RK3399"
          echo "- 内核版本: 6.1.151"
          echo "- iStoreOS Commit: ${{ env.ISTOREOS_COMMIT }}"
